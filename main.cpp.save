#include <iostream>
#include <iomanip>
#include "math.h"
#include <thread>
#include "sstream"

using namespace std;

    long double mn;
    long double niine=99980001;
    long double n_nei[12]={
                           980001,
                           9980001,
                           99980001,
                           999980001,
                           9999980001,
                           99999980001,
                           999999980001,
                           9999999980001,
                           99999999980001,
                           999999999980001,
                           9999999999980001
                           };
    long double rst_d=0;
    long double fractpart;
    long double intpart;
    long double sqtr=0;
    long double xmln=0;
    long double rxml=0;
    long double int_ten=0;
    int preci=0;
    int choo_ser=0;
    int nmlet=0;
    int lin=0;
    int st=0;
    int fnd=0;
    int let=0;
    int xl=10;
    int tmc=0;
    string lct;
    string mct;
    string slk;
    string inmn;
    string mnb;


int repeater(long double nine){

    rst_d=(long double)mn/(long double)nine;
    cout<<"\n";
    cout<<"of " << std::setprecision(preci) << mn << " / " << std::setprecision(preci) << nine << " ::== ";
    cout<< std::setprecision(preci) << rst_d <<"\n";
    cout<<"\n";
    fractpart=modf(rst_d,&intpart);
    cout<<std::setprecision(preci) << intpart << " + " << std::setprecision(preci) << fractpart << " ::== " << std::setprecision(preci)<<rst_d <<"\n";
    cout<<"\n";
    sqtr=sqrt(rst_d);
    cout<<"The main sqrt " << std::setprecision(preci) << sqrt(mn) <<" and ";
    cout<<"ur sqrt is " << std::setprecision(preci) << sqtr <<"\n";
    cout<<"\n";
    slk.clear();
    stringstream smk;
    smk<<std::setprecision(preci) << sqtr;
    slk+=smk.str();
    let=slk.size()-1;
    cout<<"The String Representation is " << slk <<" with size " << let <<"\n";
    st=0;fnd=0;
    for(int i=1;i<=let+1;i++)
    {
      xl=10;
      lct.clear();
      mct.clear();
      xl=pow(xl,i);
      xmln=sqtr*xl;
      rxml=xmln*xmln;
      fractpart=modf(rxml,&intpart);

      if(preci<i){preci=i;}
      stringstream xrm;
      xrm<<std::setprecision(preci)<<intpart;
      mct+=xrm.str();
      tmc=mct.size();
      //cout<<std::setprecision(preci) << intpart << " + " << fractpart << " ::== " << rxml <<"\n";
      if(intpart>=mn ){lct+=" ~= LOCATED ";
                      if(tmc>lin){lct+= " bigger "; lct+=to_string(tmc); lct+=" as main and " ; lct+=to_string(lin); lct+=" as this ";}
                      if(tmc<lin){lct+= " smaller "; lct+=to_string(tmc); lct+=" as main and " ; lct+=to_string(lin); lct+=" as this "; }
                      st=1;
                      }
      if(lin==tmc){lct+= " ==LOCATED "; lct+=" with size of "; lct+=to_string(tmc); lct+=" as main and " ; lct+=to_string(lin); lct+=" as this "; st=1;}
      cout<<"@i " <<std::setprecision(preci) << xl << " rst " << std::setprecision(preci) << xmln << " "  ;
      if(st==0){
                cout<<" -------> "<<std::setprecision(preci) << rxml << " " ;
                fractpart=modf(rxml,&intpart);
                int_ten=intpart;
                if(int_ten==mn){cout<<"SAME with " << intpart << " \n ";}
                
                int_ten=intpart*10;
                if(int_ten==mn){cout<<"Same * 10 with " << intpart << " *10 " << int_ten <<"\n";}
               }
      if(st==1 && fnd==0){
                        cout<<" -------> " << rxml <<" " << " vs " << mn << " " << lct <<"\n";
                        int_ten=intpart;
                        if(int_ten==mn){cout<<"SAME with " << intpart << " \n ";}
                        int_ten=intpart*10;
                        if(int_ten==mn){cout<<"Same * 10 with " << intpart << " *10 " << int_ten <<"\n";}
                        st=0; fnd=1;
                        }
      cout<<"\n";
      if(st==1){break;}
    }
return 0;
}



int main(int argc,char** argv)
{
    cout<<"hello voyeristic behaviours have fun \n";
    cout<<"enter ur number , ur precision , ur nines pattern .Press 1 to change,2 for table or 0 to leave it\n";
    cout<<"as it the default value is 99980001\n";
    mn=stold(argv[1]);
    preci=stoi(argv[2]);
    choo_ser=stoi(argv[3]);
    mnb.clear();
    mnb+=to_string(mn);
    nmlet=mnb.size()-1;
   // cout<<mnb<<"\n";
   // cout<<"ur main number " << std::setprecision(preci) << mn << " with size of " << nmlet <<"\n";
    if (choo_ser==1){
       niine=stold(argv[4]);
       repeater(niine);
    }
    stringstream mti;
    inmn.clear();
    mti<<std::setprecision(preci)<<mn;
    inmn+=mti.str();
    lin=inmn.size();
    if(choo_ser==2){
       for(int i=0;i<=12;i++){
         cout<<"\n";
         cout<<"------------------------------\n";
         repeater(n_nei[i]);
         cout<<"------------------------------\n";
       }
    }
    if(choo_ser==0){
      repeater(niine);
    }
    return 0;
}
